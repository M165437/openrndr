plugins {
    id("org.openrndr.convention.kotlin-jvm")
}



switch (org.gradle.internal.os.OperatingSystem.current()) {
    case org.gradle.internal.os.OperatingSystem.WINDOWS:
        project.ext.openrndrOS = "windows"
        break
    case org.gradle.internal.os.OperatingSystem.LINUX:
        project.ext.openrndrOS = "linux-x64"
        break
    case org.gradle.internal.os.OperatingSystem.MAC_OS:
        switch(System.getProperty("os.arch")) {
            case "x86-64":
            case "x86_64":
            case "amd64":
            case "x64":
                project.ext.openrndrOS = "macos"
                break
            case "aarch64":
            case "arm-v8":
            case "arm64":
                project.ext.openrndrOS = "macos-arm64"
                break
        }
        break
}

dependencies {
    implementation project(":openrndr-jvm:openrndr-gl3")
    implementation project(":openrndr-filter")
    implementation project(":openrndr-extensions")
    implementation project(":openrndr-jvm:openrndr-dialogs")
    runtimeOnly project(":openrndr-jvm:openrndr-gl3-natives-$openrndrOS")
    runtimeOnly project(":openrndr-jvm:openrndr-openal-natives-$openrndrOS")
    runtimeOnly project(":openrndr-jvm:openrndr-ffmpeg-natives-$openrndrOS")
    implementation project(":openrndr-jvm:openrndr-ffmpeg")
    implementation(libs.kotlin.coroutines)
    implementation(libs.kotlin.reflect)
    runtimeOnly(libs.slf4j.simple)
}